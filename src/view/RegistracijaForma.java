/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import condinator.Cordinator;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.security.NoSuchAlgorithmException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import model.Menadzer;

/**
 *
 * @author Korisnik
 */
public class RegistracijaForma extends javax.swing.JFrame {
    Menadzer men;
    /**
     * Creates new form RegistracijaForma
     */
    public RegistracijaForma() {
        initComponents();
        setTitle("Registracija");
        setResizable(false);
        setLocationRelativeTo(null);
        dinamickaValidacija();
        setDefaultCloseOperation(RegistracijaForma.DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                new PrijavaForma().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldJMBG = new javax.swing.JTextField();
        jTextFieldImePrezime = new javax.swing.JTextField();
        jTextFieldDatRodj = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jButtonRegistrujSe = new javax.swing.JButton();
        jLabelProvera = new javax.swing.JLabel();
        jButtonOdustani = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("JMBG");

        jLabel2.setText("Ime i prezime");

        jLabel3.setText("Email");

        jLabel4.setText("Datum rodjenja");

        jButtonRegistrujSe.setText("Registruj se");
        jButtonRegistrujSe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrujSeActionPerformed(evt);
            }
        });

        jLabelProvera.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jButtonOdustani.setText("Odustani");
        jButtonOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdustaniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jTextFieldDatRodj)
                            .addComponent(jTextFieldImePrezime)
                            .addComponent(jTextFieldJMBG)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonOdustani)
                        .addComponent(jLabelProvera, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(138, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonRegistrujSe)
                .addGap(95, 95, 95))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldImePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldDatRodj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jLabelProvera, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrujSe)
                    .addComponent(jButtonOdustani))
                .addGap(99, 99, 99))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public JTextField getjTextFieldDatRodj() {
        return jTextFieldDatRodj;
    }

    public JTextField getjTextFieldEmail() {
        return jTextFieldEmail;
    }

    public JTextField getjTextFieldImePrezime() {
        return jTextFieldImePrezime;
    }

    public JTextField getjTextFieldJMBG() {
        return jTextFieldJMBG;
    }

    private void jButtonRegistrujSeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrujSeActionPerformed

        String jmbg = jTextFieldJMBG.getText().trim();
        String imePrezime = jTextFieldImePrezime.getText().trim();
        String datumRodj = jTextFieldDatRodj.getText().trim();
        String email = jTextFieldEmail.getText().trim();

        

//        if (postoji(menadzer)) {
//            int odgovor = JOptionPane.showConfirmDialog(this, "Nalog sa ovom email adresom ili jmbg-om vec postoji!\n Prijavite se?", "Obavestenje", JOptionPane.YES_NO_OPTION);
//            if (odgovor == JOptionPane.YES_OPTION) {
//                this.dispose();
//                PrijavaForma pf = new PrijavaForma(email);
//                pf.setVisible(true);
//            } else {
//                return;
//            }
//        }
//
        if (!statickaValidacija(jmbg, imePrezime, email)) {
            JOptionPane.showMessageDialog(this, "Proverite unesene podatke");
            return;
        }

        java.util.Date datumRodjenja = null;
        SimpleDateFormat format=new SimpleDateFormat("dd-MM-yyyy");
        try {
            datumRodjenja = format.parse(datumRodj);
        } catch (ParseException ex) {
            jTextFieldDatRodj.setBorder(new LineBorder(Color.RED, 3));
            System.out.println("Greska pri parsiranju datuma");
            return;
        }
        
        Menadzer menadzer = new Menadzer(jmbg, imePrezime, email, null, datumRodjenja, true, true, null);
      
        
//        Random random = new Random();
//        int kod = 10000 + random.nextInt(90000);
//
//        try {
//            EmailPoruka.autentifikacija(email, String.valueOf(kod));
//        } catch (MessagingException ex) {
//            System.out.println("Greska u slanju koda za autentifikaciju");
//            return;
//        }
        

//        JOptionPane.showMessageDialog(this, "Na svom mejl nalogu: " + email + ", mozete videti svoju privremenu lozinku", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
//        
//        try {
//            menadzer.setLozinka(hashing.Hash.kriptuj(kod+"", "ArtLik$jdna"));
//        } catch (NoSuchAlgorithmException ex) {
//            Logger.getLogger(RegistracijaForma.class.getName()).log(Level.SEVERE, null, ex);
//            System.out.println("Greska pri hasiranju");
//        }
//
//        Controller.getInstance().setUlogovani(menadzer);
//        Controller.getInstance().kreirajMenadzer(menadzer);
//        Controller.getInstance().getMenadzeri().add(menadzer);
//        
//        this.dispose();
//        PrijavaForma pf = new PrijavaForma();
//        pf.setVisible(true);

    }//GEN-LAST:event_jButtonRegistrujSeActionPerformed

    private void jButtonOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdustaniActionPerformed

        Cordinator.getInstance().otvoriPrijavaFormu();
        this.dispose();


    }//GEN-LAST:event_jButtonOdustaniActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RegistracijaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RegistracijaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RegistracijaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RegistracijaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RegistracijaForma().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOdustani;
    private javax.swing.JButton jButtonRegistrujSe;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelProvera;
    private javax.swing.JTextField jTextFieldDatRodj;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldImePrezime;
    private javax.swing.JTextField jTextFieldJMBG;
    // End of variables declaration//GEN-END:variables

    private boolean statickaValidacija(String jmbg, String imePrezime, String email) {
        boolean jmbgReg = jmbg.matches("\\d{13}");

        boolean imePrezimeReg = imePrezime.matches("^[A-Za-z]+ [A-Za-z]+$");

        boolean emailReg = email.matches("[A-Za-z][A-Za-z0-9_.]+@gmail.com");

        if (jmbgReg && imePrezimeReg && emailReg) {
            return true;
        }

        if (!jmbgReg) {
            jTextFieldJMBG.setBorder(new LineBorder(Color.RED, 3));
        }
        if (!imePrezimeReg) {
            jTextFieldImePrezime.setBorder(new LineBorder(Color.RED, 3));
        }
        if (!jmbgReg) {
            jTextFieldImePrezime.setBorder(new LineBorder(Color.RED, 3));
        }

        return false;
    }

    private void dinamickaValidacija() {

        jTextFieldEmail.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {

                validateEmail(e, "insertUpdate");
            }

            @Override
            public void removeUpdate(DocumentEvent e) {

                validateEmail(e, "removeUpdate");
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }

            private void validateEmail(DocumentEvent e, String prefix) {
                try {
                    jLabelProvera.setForeground(new java.awt.Color(255, 255, 255));
                    String text = e.getDocument().getText(0, e.getDocument().getLength());
                    text.trim();
                    if (!text.matches("[A-Za-z][A-Za-z0-9_.]*@gmail.com") && !text.isEmpty()) {
                        jLabelProvera.setText("Proverite format email-a");
                    } else {
                        jLabelProvera.setText("");
                    }

                } catch (BadLocationException ex) {
                    Logger.getLogger(RegistracijaForma.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        });

    }

//    private boolean postoji(Menadzer menadzer) {
//        return Controller.getInstance().postoji(menadzer);
//    }

    public void regActionListener(ActionListener actionListener) {
        jButtonRegistrujSe.addActionListener(actionListener);
    }
}
