/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import condinator.Cordinator;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import model.VrstaAktivnosti;

/**
 *
 * @author Korisnik
 */
public class VrstaAktivnostiKreirajForma extends javax.swing.JDialog {

    private VrstaAktivnostiForma roditelj;
    private VrstaAktivnosti vakt;

    /**
     * Creates new form VrstaAktivnostiKreirajForma
     */
    public VrstaAktivnostiKreirajForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        popuniFormuKreiraj();
        roditelj = (VrstaAktivnostiForma) parent;
    }

    public VrstaAktivnostiKreirajForma(java.awt.Frame parent, boolean modal, VrstaAktivnosti vakt) {
        super(parent, modal);
        initComponents();
        this.vakt = vakt;
        popuniFormuDetalji();
        roditelj = (VrstaAktivnostiForma) parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldNaziv = new javax.swing.JTextField();
        jButtonKreiraj = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonSacuvaj = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Naziv");

        jButtonKreiraj.setText("Kreiraj");
        jButtonKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKreirajActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonSacuvaj.setText("Sacuvaj");
        jButtonSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jTextFieldNaziv))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButtonIzmeni)
                        .addGap(31, 31, 31)
                        .addComponent(jButtonSacuvaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jButtonObrisi)
                        .addGap(37, 37, 37)
                        .addComponent(jButtonKreiraj)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonKreiraj)
                    .addComponent(jButtonIzmeni)
                    .addComponent(jButtonSacuvaj)
                    .addComponent(jButtonObrisi))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKreirajActionPerformed
        String naziv = jTextFieldNaziv.getText();

        if (!validacija(naziv)) {
            JOptionPane.showMessageDialog(this, "Proverite unesene podatke", "Greska", JOptionPane.ERROR_MESSAGE);
            jTextFieldNaziv.setBorder(new LineBorder(Color.RED, 3));
            return;
        }
        if (ubaciUbazu(naziv)) {
            JOptionPane.showMessageDialog(this, "Vrsta aktivnosti je ubacena u bazu", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            Cordinator.getInstance().getvaFormaController().azurirajTabelu();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Greska pri unosu vrste aktivnosti", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonKreirajActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        int odgovor = JOptionPane.showConfirmDialog(this, "Da li zelite da obrisete vrstu aktivnosti?", "Potvrda", JOptionPane.YES_NO_OPTION);
        if (odgovor != JOptionPane.YES_OPTION) {
            return;
        }
        obrisiVA(vakt);
        this.dispose();
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        jTextFieldNaziv.setEnabled(true);
        jButtonSacuvaj.setEnabled(true);
        jButtonObrisi.setEnabled(false);
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    private void jButtonSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajActionPerformed
        String naziv = jTextFieldNaziv.getText();

        if (!validacija(naziv)) {
            JOptionPane.showMessageDialog(this, "Proverite unesene podatke", "Greska", JOptionPane.ERROR_MESSAGE);
            jTextFieldNaziv.setBorder(new LineBorder(Color.RED, 3));
            return;
        }
        if (izmeniVA(naziv)) {
            JOptionPane.showMessageDialog(this, "Vrsta aktivnosti je izmenjena", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            Cordinator.getInstance().getvaFormaController().azurirajTabelu();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Greska pri izmeni vrste aktivnosti", "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VrstaAktivnostiKreirajForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VrstaAktivnostiKreirajForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VrstaAktivnostiKreirajForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VrstaAktivnostiKreirajForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VrstaAktivnostiKreirajForma dialog = new VrstaAktivnostiKreirajForma(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonKreiraj;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JButton jButtonSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldNaziv;
    // End of variables declaration//GEN-END:variables

    private boolean validacija(String naziv) {
        return naziv.matches("^[A-Z][a-zA-Z ]*$");
    }

    private boolean ubaciUbazu(String naziv) {

        VrstaAktivnosti vrstaAktivnosti = new VrstaAktivnosti(0, naziv, false);
        return komunikacijaKlijent.Komunikacija.getInstance().kreirajVrstaAktivnosti(vrstaAktivnosti);

    }

    private void popuniFormuKreiraj() {
        jButtonIzmeni.setVisible(false);
        jButtonObrisi.setVisible(false);
        jButtonSacuvaj.setVisible(false);
    }

    private void popuniFormuDetalji() {
        jTextFieldNaziv.setText(vakt.getNazivVrstaAktivnosti());
        jTextFieldNaziv.setEnabled(false);
        jButtonSacuvaj.setEnabled(false);
        jButtonKreiraj.setVisible(false);
    }

    private void obrisiVA(VrstaAktivnosti vakt) {

        if (obrisiIzBaze(vakt)) {
            Cordinator.getInstance().getvaFormaController().azurirajTabelu();
        }
    }

    private boolean obrisiIzBaze(VrstaAktivnosti vakt) {
        vakt.setObrisana(true);
        boolean uspesno = komunikacijaKlijent.Komunikacija.getInstance().obrisiVrstaAktivnosti(vakt);
        if (uspesno) {
            JOptionPane.showMessageDialog(this, "Vrsta aktivnosti je obrisana iz baze", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Vrsta aktivnosti nije obrisana iz baze", "Greska", JOptionPane.ERROR_MESSAGE);
            return false;
        }

    }

    private boolean izmeniVA(String naziv) {
        vakt.setNazivVrstaAktivnosti(naziv);
        return komunikacijaKlijent.Komunikacija.getInstance().promeniVrstaAktivnosti(vakt);
        
    }

}
